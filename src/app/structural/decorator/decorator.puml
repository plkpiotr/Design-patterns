@startuml

interface Person {
  wear(): void
}

class Woman {
  + wear(): void
}

class Shop {
  - person: Person
  constructor(private person: Person)
  + wear(): void
}

class Jacket {
  + wear(): void
}

class Scarf {
  + wear(): void
}

Person <|. Woman
Person <--o Shop
Person <|.. Shop

Shop <|-- Jacket
Shop <|-- Scarf

@enduml

' We don't need use non-concrete decorator class (Shop) in client code
' We can add private functions inside concrete decorators
' We can create a wrapper for client logic (with Person type argument)
