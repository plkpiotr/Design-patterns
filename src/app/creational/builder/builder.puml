@startuml

interface Builder {
  buildWithElevator(): void;
  buildWithPool(depth: string): void;
}

class Foreman {
  - builder: Builder
  + setBuilder(builder: Builder): void
  + buildBasicVersion(): void
  + buildPremiumVersion(): void
}

class ConstructionCrew {
  - house: House
  + buildWithElevator(): void
  + buildWithPool((depth: string): void
  + putHouseIntoUse(): House
}

class House {
  - equipments: string[]
  + addEquipment(equipment: string): void
  + showEquipments(): void
}

Builder -o Foreman
Builder <|.. ConstructionCrew
ConstructionCrew -> House
@enduml

' Association means "has / invoking its function"
' Aggregation means can exist independently
' Composition means cannot exist independently
' Director class (Foreman) is optional
