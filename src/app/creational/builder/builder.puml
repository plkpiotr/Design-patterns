@startuml

skinparam class {
  backgroundColor whitesmoke
  arrowColor dimgrey
  borderColor dimgrey
}

interface Builder {
  buildWithElevator(): void
  buildWithPool(size: string): void
}

class Director {
  - builder: Builder
  + setBuilder(builder: Builder): void
  + manageBasicVersion(): void
  + managePremiumVersion(): void
}

class Crew {
  - house: House
    constructor() {}
  + buildWithElevator(): void
  + buildWithPool((size: string): void
  + putHouseIntoUse(): House
}

class House {
  - equipments: string[]
  + addEquipment(equipment: string): void
  + getEquipments(): string[]
}

Builder -o Director
Builder <|.. Crew
Crew -> House

@enduml

' Association means "has / invoking its function"
' Aggregation means can exist independently
' Composition means cannot exist independently
' Director class is optional
